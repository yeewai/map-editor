'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _enzyme = require('enzyme');

var _enzyme2 = _interopRequireDefault(_enzyme);

var _enzymeAdapterReact = require('enzyme-adapter-react-16');

var _enzymeAdapterReact2 = _interopRequireDefault(_enzymeAdapterReact);

var _reduxMockStore = require('redux-mock-store');

var _reduxMockStore2 = _interopRequireDefault(_reduxMockStore);

var _ModalRoot = require('./ModalRoot');

var _ModalRoot2 = _interopRequireDefault(_ModalRoot);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var mockStore = (0, _reduxMockStore2.default)();
_enzyme2.default.configure({ adapter: new _enzymeAdapterReact2.default() });

describe("Modal Root", function () {
    var testComponent = function testComponent() {
        return _react2.default.createElement(
            'p',
            null,
            'Sup'
        );
    };
    var modal_components = {
        'STUDENT_BIO': testComponent
    };

    it("Renders nothing if no modal is visible", function () {
        var store = mockStore({
            modals: {
                modalType: "",
                modalProps: {}
            }
        });
        var modalWrapper = (0, _enzyme.mount)(_react2.default.createElement(
            _reactRedux.Provider,
            { store: store },
            _react2.default.createElement(_ModalRoot2.default, { modal_components: modal_components, whichModalRoot: 'top' })
        ));
        expect(modalWrapper.find('ModalRoot').children().length).toBe(0);
    });

    it("Renders nothing if not given a valid modal", function () {
        var store = mockStore({
            modals: {
                modalType: "abc",
                modalProps: {}
            }
        });
        var modalWrapper = (0, _enzyme.mount)(_react2.default.createElement(
            _reactRedux.Provider,
            { store: store },
            _react2.default.createElement(_ModalRoot2.default, { modal_components: modal_components, whichModalRoot: 'top' })
        ));
        expect(modalWrapper.find('ModalRoot').children().length).toBe(0);
    });

    it("Renders nothing if not given anything", function () {
        var store = mockStore({});
        var modalWrapper = (0, _enzyme.mount)(_react2.default.createElement(
            _reactRedux.Provider,
            { store: store },
            _react2.default.createElement(_ModalRoot2.default, { modal_components: modal_components, whichModalRoot: 'top' })
        ));
        expect(modalWrapper.find('ModalRoot').children().length).toBe(0);
    });
});

describe("Student Bio Modal", function () {
    var testComponent = function testComponent() {
        return _react2.default.createElement(
            'p',
            null,
            'Sup'
        );
    };
    var modal_components = {
        'STUDENT_BIO': testComponent
    };

    function setup() {
        var store = mockStore({
            modals: {
                "STUDENT_BIO": {
                    visible: true,
                    modalProps: {}
                }
            }
        });
        return (0, _enzyme.mount)(_react2.default.createElement(
            _reactRedux.Provider,
            { store: store },
            _react2.default.createElement(_ModalRoot2.default, { modal_components: modal_components })
        ));
    };

    it("Renders student bio if state says it's visible", function () {
        var modalWrapper = setup();
        expect(modalWrapper.find(testComponent).exists()).toBe(true);
    });

    //Invalid string length :(
    xit("should match snapshot", function () {
        var modalWrapper = setup();
        expect(modalWrapper).toMatchSnapshot();
    });
});