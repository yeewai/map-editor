'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.mapDispatchToProps = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _index = require('../index');

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var OpenModalButton = function OpenModalButton(_ref) {
	var buttonText = _ref.buttonText,
	    modalType = _ref.modalType,
	    _ref$modalProps = _ref.modalProps,
	    modalProps = _ref$modalProps === undefined ? {} : _ref$modalProps,
	    openModal = _ref.openModal,
	    children = _ref.children,
	    className = _ref.className,
	    disabled = _ref.disabled;

	var ariaLabel = modalProps.ariaLabel || 'Open modal: ' + modalType.replace("_", " ").toLowerCase();
	return _react2.default.createElement(
		'button',
		{
			'aria-label': ariaLabel,
			disabled: !!disabled,
			className: (0, _classnames3.default)("open-modal btn btn-link", _defineProperty({}, className, !!className)),
			onClick: function onClick(e) {
				return openModal(modalType, modalProps, e);
			} },
		children
	);
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
	return {};
};
var mapDispatchToProps = exports.mapDispatchToProps = function mapDispatchToProps(dispatch) {
	return {
		openModal: function openModal(modalType, modalProps, e) {
			e.preventDefault();
			dispatch(_index.modalActions.showModal(modalType, modalProps));
			return true;
		}
	};
};
exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(OpenModalButton);