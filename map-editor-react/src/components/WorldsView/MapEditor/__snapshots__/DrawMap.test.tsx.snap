// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Drawing the Map renders 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    pan={
        Object {
            "h": 1,
            "v": 1,
          }
    }
    world={
        Object {
            "uniqueStructures": Array [
              Object {
                "definition": Object {
                  "id": "",
                  "imageUrl": "",
                  "kind": "",
                  "length": 1,
                  "name": "",
                  "width": 1,
                },
                "definitionId": "",
                "id": "a",
                "image": Object {
                  "innerHTML": "Sup",
                },
                "imageHeight": 2,
                "imageWidth": 1,
                "name": "",
                "xposition": 1,
                "yposition": 1,
              },
            ],
          }
    }
    zoom={1}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <svg
        className="map"
        preserveAspectRatio="xMinYMax"
        viewBox="-65 160 100 100"
>
        <image
                className="mapBG"
                width={NaN}
                x={NaN}
                xlinkHref={undefined}
        />
        <defs
                className="structureReference"
        >
                <symbol
                        dangerouslySetInnerHTML={
                                Object {
                                        "__html": "Sup",
                                      }
                        }
                        id="a"
                        preserveAspectRatio="xMidYMid"
                        viewBox="0 0 1 2"
                />
        </defs>
        <Connect(DrawBoard)
                board={undefined}
        />
        <Connect(Component)
                uniqueStructures={
                        Array [
                                Object {
                                  "definition": Object {
                                    "id": "",
                                    "imageUrl": "",
                                    "kind": "",
                                    "length": 1,
                                    "name": "",
                                    "width": 1,
                                  },
                                  "definitionId": "",
                                  "id": "a",
                                  "image": Object {
                                    "innerHTML": "Sup",
                                  },
                                  "imageHeight": 2,
                                  "imageWidth": 1,
                                  "name": "",
                                  "xposition": 1,
                                  "yposition": 1,
                                },
                              ]
                }
        />
</svg>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <image
            className="mapBG"
            width={NaN}
            x={NaN}
            xlinkHref={undefined}
/>,
          <defs
            className="structureReference"
>
            <symbol
                        dangerouslySetInnerHTML={
                                    Object {
                                                "__html": "Sup",
                                              }
                        }
                        id="a"
                        preserveAspectRatio="xMidYMid"
                        viewBox="0 0 1 2"
            />
</defs>,
          <Connect(DrawBoard)
            board={undefined}
/>,
          <Connect(Component)
            uniqueStructures={
                        Array [
                                    Object {
                                      "definition": Object {
                                        "id": "",
                                        "imageUrl": "",
                                        "kind": "",
                                        "length": 1,
                                        "name": "",
                                        "width": 1,
                                      },
                                      "definitionId": "",
                                      "id": "a",
                                      "image": Object {
                                        "innerHTML": "Sup",
                                      },
                                      "imageHeight": 2,
                                      "imageWidth": 1,
                                      "name": "",
                                      "xposition": 1,
                                      "yposition": 1,
                                    },
                                  ]
            }
/>,
        ],
        "className": "map",
        "preserveAspectRatio": "xMinYMax",
        "viewBox": "-65 160 100 100",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "mapBG",
            "width": NaN,
            "x": NaN,
            "xlinkHref": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "image",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <symbol
                dangerouslySetInnerHTML={
                                Object {
                                                "__html": "Sup",
                                              }
                }
                id="a"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 1 2"
/>,
            ],
            "className": "structureReference",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "a",
              "nodeType": "host",
              "props": Object {
                "dangerouslySetInnerHTML": Object {
                  "__html": "Sup",
                },
                "id": "a",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 1 2",
              },
              "ref": null,
              "rendered": null,
              "type": "symbol",
            },
          ],
          "type": "defs",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "board": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "uniqueStructures": Array [
              Object {
                "definition": Object {
                  "id": "",
                  "imageUrl": "",
                  "kind": "",
                  "length": 1,
                  "name": "",
                  "width": 1,
                },
                "definitionId": "",
                "id": "a",
                "image": Object {
                  "innerHTML": "Sup",
                },
                "imageHeight": 2,
                "imageWidth": 1,
                "name": "",
                "xposition": 1,
                "yposition": 1,
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "svg",
    },
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <svg
          className="map"
          preserveAspectRatio="xMinYMax"
          viewBox="-65 160 100 100"
>
          <image
                    className="mapBG"
                    width={NaN}
                    x={NaN}
                    xlinkHref={undefined}
          />
          <defs
                    className="structureReference"
          >
                    <symbol
                              dangerouslySetInnerHTML={
                                        Object {
                                                  "__html": "Sup",
                                                }
                              }
                              id="a"
                              preserveAspectRatio="xMidYMid"
                              viewBox="0 0 1 2"
                    />
          </defs>
          <Connect(DrawBoard)
                    board={undefined}
          />
          <Connect(Component)
                    uniqueStructures={
                              Array [
                                        Object {
                                          "definition": Object {
                                            "id": "",
                                            "imageUrl": "",
                                            "kind": "",
                                            "length": 1,
                                            "name": "",
                                            "width": 1,
                                          },
                                          "definitionId": "",
                                          "id": "a",
                                          "image": Object {
                                            "innerHTML": "Sup",
                                          },
                                          "imageHeight": 2,
                                          "imageWidth": 1,
                                          "name": "",
                                          "xposition": 1,
                                          "yposition": 1,
                                        },
                                      ]
                    }
          />
</svg>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <image
              className="mapBG"
              width={NaN}
              x={NaN}
              xlinkHref={undefined}
/>,
            <defs
              className="structureReference"
>
              <symbol
                            dangerouslySetInnerHTML={
                                          Object {
                                                        "__html": "Sup",
                                                      }
                            }
                            id="a"
                            preserveAspectRatio="xMidYMid"
                            viewBox="0 0 1 2"
              />
</defs>,
            <Connect(DrawBoard)
              board={undefined}
/>,
            <Connect(Component)
              uniqueStructures={
                            Array [
                                          Object {
                                            "definition": Object {
                                              "id": "",
                                              "imageUrl": "",
                                              "kind": "",
                                              "length": 1,
                                              "name": "",
                                              "width": 1,
                                            },
                                            "definitionId": "",
                                            "id": "a",
                                            "image": Object {
                                              "innerHTML": "Sup",
                                            },
                                            "imageHeight": 2,
                                            "imageWidth": 1,
                                            "name": "",
                                            "xposition": 1,
                                            "yposition": 1,
                                          },
                                        ]
              }
/>,
          ],
          "className": "map",
          "preserveAspectRatio": "xMinYMax",
          "viewBox": "-65 160 100 100",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "mapBG",
              "width": NaN,
              "x": NaN,
              "xlinkHref": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "image",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <symbol
                  dangerouslySetInnerHTML={
                                    Object {
                                                      "__html": "Sup",
                                                    }
                  }
                  id="a"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 1 2"
/>,
              ],
              "className": "structureReference",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "a",
                "nodeType": "host",
                "props": Object {
                  "dangerouslySetInnerHTML": Object {
                    "__html": "Sup",
                  },
                  "id": "a",
                  "preserveAspectRatio": "xMidYMid",
                  "viewBox": "0 0 1 2",
                },
                "ref": null,
                "rendered": null,
                "type": "symbol",
              },
            ],
            "type": "defs",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "board": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "uniqueStructures": Array [
                Object {
                  "definition": Object {
                    "id": "",
                    "imageUrl": "",
                    "kind": "",
                    "length": 1,
                    "name": "",
                    "width": 1,
                  },
                  "definitionId": "",
                  "id": "a",
                  "image": Object {
                    "innerHTML": "Sup",
                  },
                  "imageHeight": 2,
                  "imageWidth": 1,
                  "name": "",
                  "xposition": 1,
                  "yposition": 1,
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "svg",
      },
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
